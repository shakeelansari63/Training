/* Import Lato font */
@import url('https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap');
/* We can define properties or variables which canbe re-used in css multiple times in :root */
:root {
    --primary-color: #047aed;
    --secondary-color: #1c3fa8;
    --dark-color: #002240;
    --light-color: #f4f4f4;
    --success-color: #5cb85c;
    --error-color: #d9534f;
}

/* Default styling for all elements 
 * Box Sizing allow setting margin and padding without thinking about elements width and height */
* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

/* Set default font and color for body elements 
 * Line height sets the gab between 2 lines. and 1.6 spread them a bit more. */
body {
    font-family: 'Lato', sans-serif;
    color: #333;
    line-height: 1.6;
}

/* Remove bullet points from UL */
ul {
    list-style-type: none;
}

/* Remove underlines from links and set color to default text color*/
a {
    text-decoration: none;
    color:#333;
}

/* For headers, make it less bold with font weight and change line height to there is not lot of gap. 
 * Also add top and botton margin of 10px but left and right margin 0px */
h1, h2 {
    font-weight: 300;
    line-height: 1.2;
    margin: 10px 0px;
}

/* Add margin for paragraphs as well */
p {
    margin: 10px 0px;
}

/* Set width of 100% for images so they don't overflow from their container */
img {
    width: 100%;
}

/* Format Pre and Code tags to look like terminal commands */
pre, code {
    padding: 10px;
    background-color: #333;
    color: #fff;
}

/* ---------------------------------------------------------------------------
 *                         UTILITIES
 *---------------------------------------------------------------------------- */
/* Container are to place items in middle if screen size is big 
 * So we set max width to 1100px and margin of left and right to auto
 * If screen size goes more than 1100px, the container is aligned center 
 * Overflow auto removed margin from h1 tag
 * And left and right padding for screens smaller than 1100px*/
.container {
    max-width: 1100px;
    margin: 0px auto;
    overflow: auto;
    padding: 0px 40px;
}

/* Flex class convert a div to flex box and we can align items 
 * Flex Direction tells whether flex is row or column
 * And Justify content tells the justifictaion in flex box "space-between" justification put stretch in between
* Aligh items align content in cross axis i.e. if flex box is row, align items align in column and vice versa*/
.flex {
    display: flex;
    justify-content: center;
    height: 100%;
    align-items: center;
}

/* grid takes the conatainer and conveert it into grid. 
 * And we can define how big each coluumn in a row can be using px(pixel), %(percent) or fr(fraction) notation 
 * if we want same property value multiple times we can use repeat 
 * 1fr 1fr can also be written as repeat(2, 1fr) 
 * gap is grid gap  between each column*/
 .grid {
     display: grid;
     /* grid-template-columns: 1fr 1fr; */
     grid-template-columns: repeat(2, 1fr);
     gap: 20px;
     justify-content: center;
     align-items: center;
     height: 100%;
 }

 /* Card Class Set 10px radiur of corner 
  * Box shadow of black color and 0.2alpha for transparency
  * */
 .card {
     background-color: #fff;
     border-radius: 10px;
     box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
     margin: 10px;
     padding: 20px;
     color: #333;
 }

 /* Format Buttons */
 .btn {
     display: inline-block;
     border: 0px;
     border-radius: 5px;
     padding: 10px 30px;
     cursor: pointer;
     background-color: var(--primary-color);
     color: #fff;
 }

 /* Styling outline only button */
 .btn-outline {
     background-color: transparent;
     border: 1px solid #fff;
 }

 /* Hover effect for buttons */
 .btn:hover {
     transform: scale(0.99);
 }

 /* Alerts tags */
 .alert {
     background-color: var(--light-color);
     margin: 10px 0;
     padding: 10px 20px;
     font-weight: bold;
 }

 .alert i {
    margin-right: 10px;
 }

 .alert-success {
     background-color: var(--success-color);
     color: #fff;
 }

 .alert-error {
    background-color: var(--error-color);
    color: #fff;
}

 /* background and button color */
 .bg-secondary, .btn-secondary {
     background-color: var(--secondary-color);
     color: #fff;
 }

 .bg-dark, .btn-dark {
    background-color: var(--dark-color);
    color: #fff;
}

.bg-light, .btn-light {
    background-color: var(--light-color);
    color: #333;
}

.bg-primary, .btn-primary {
    background-color: var(--primary-color);
    color: #fff;
}

.bg-primary a, .btn-primary a,
.bg-secondary a, .btn-secondary a,
.bg-dark a, .btn-dark a {
    color: #fff
}

/* Text Color Classes */
.text-secondary {
    color: var(--secondary-color);
}

.text-dark {
   color: var(--dark-color);
}

.text-light {
   color: var(--light-color);
}

.text-primary {
   color: var(--primary-color);
}

/* 3 column grid */
.grid-3 {
    grid-template-columns: repeat(3, 1fr);
}

/* Center Text */
.text-center {
    text-align: center;
}

/* Margin classes */
.my-1 {
    margin: 1rem 0 ;
}

.my-2 {
    margin: 1.5rem 0 ;
}

.my-3 {
    margin: 2rem 0 ;
}

.my-4 {
    margin: 2.5rem 0 ;
}

.my-5 {
    margin: 3rem 0 ;
}

.mx-1 {
    margin: 0 1rem ;
}

.mx-2 {
    margin: 0 1.5rem ;
}

.mx-3 {
    margin: 0 2rem;
}

.mx-4 {
    margin: 0 2.5rem;
}

.mx-5 {
    margin: 0 3rem;
}

.m-1 {
    margin: 1rem;
}

.m-2 {
    margin: 1.5rem;
}

.m-3 {
    margin: 2rem;
}

.m-4 {
    margin: 2.5rem;
}

.m-5 {
    margin: 3rem;
}

/* Padding classes */
.py-1 {
    padding: 1rem 0 ;
}

.py-2 {
    padding: 1.5rem 0 ;
}

.py-3 {
    padding: 2rem 0 ;
}

.py-4 {
    padding: 2.5rem 0 ;
}

.py-5 {
    padding: 3rem 0 ;
}

.px-1 {
    padding: 0 1rem ;
}

.px-2 {
    padding: 0 1.5rem ;
}

.px-3 {
    padding: 0 2rem;
}

.px-4 {
    padding: 0 2.5rem;
}

.px-5 {
    padding: 0 3rem;
}

.p-1 {
    padding: 1rem;
}

.p-2 {
    padding: 1.5rem;
}

.p-3 {
    padding: 2rem;
}

.p-4 {
    padding: 2.5rem;
}

.p-5 {
    padding: 3rem;
}

/* Text Sizes */
.sm {
    font-size: 1rem;
}

.md {
    font-size: 2rem;
}

.lg {
    font-size: 3rem;
}

.xl {
    font-size: 4rem;
}

/* ---------------------------------------------------------------------------
 *                         NAVBAR
 *---------------------------------------------------------------------------- */
/* Now lets style the Navigation Bar adn use primary color varible defined in :root on top*/
.navbar {
    background-color: var(--primary-color);
    color: #fff;
    height: 70px;
}

/* Above flex is for all items but if flx is insite navbar, we need differet setting */
.navbar .flex {
    justify-content: space-between;
}

/* And if there are list in navbar, convert that list to flex again */
.navbar ul {
    display: flex;
}

/* And style links in navbar */
.navbar a {
    color: #fff;
    padding: 10px;
    margin: 0px 5px;
}

/* Styling hover effect on navbar links*/
.navbar a:hover {
    border-bottom: 2px #fff solid;
}

/* ---------------------------------------------------------------------------
 *                         SHOWCASE
 *---------------------------------------------------------------------------- */
 /* Styling for showcase section */
 .showcase {
     height: 400px;
     background-color: var(--primary-color);
     color: #fff;
     position: relative;
 }

 /* We need H1 to be little bigger in showcase */
 .showcase h1 {
     font-size: 40px;
 }

 /* And little more padding for paragraph */
 .showcase p {
     padding: 20px 0px;
 }

 /* Customize showcase grid */
 .showcase .grid {
     grid-template-columns: 55% 45%;
     gap: 30px;
     overflow: visible;
 }

 /* Showcase form styling
  * We move it below by 60px using top
  * z-index makes sure the form is always shown and it is on top
  * Since we have set width parameter, we can justify it to right using justify-self. */
 .showcase-form {
     position: relative;
     top: 60px;
     height: 350px;
     width: 400px;
     padding: 40px;
     z-index: 100;
     justify-self: flex-end;
 }

 /* Styling Showcase form items */
 .showcase-form .form-control {
     margin: 30px 0px;
 }

 /* Styling Text and email inputs */
 .showcase-form input[type='text'], .showcase-form input[type='email'] {
    border: 0px;
    border-bottom: 1px solid #b4becb;
    width: 100%;
    padding: 3px;
    font-size: 16px;
 }

 /* remove border from input when clicked on or focused */
 .showcase-form input:focus {
     outline: none;
 }

 /* Slant area below showcase 
  * Set Position to absolute, since it is after showcasse and to put it 60px from bottom
  * transform skewY will skew it by 3degree in Y axis*/
.showcase::after  {
     content: '';
     position: absolute;
     height: 100px;
     bottom: -60px;
     right: 0;
     left: 0;
     background: #fff;
     transform: skewY(-3deg);
     -webkit-transform: skewY(-3deg);
     -mox-transform: skewY(-3deg);
     -ms-transform: skewY(-3deg); 
 }

 /* Stats Sections */
 .stats {
     padding-top: 100px;
 }

 .stats .grid h3 {
     font-size: 35px;
 }

 .stats .grid p {
     font-size: 20px;
     font-weight: bold;
 }

 /* CLI Section 
  * The column need to be 2:1 so that imag elook big 
  * and we need 2 rows so cards are one below other */
 .cli .grid {
     grid-template-columns: 2fr 1fr;
     grid-template-rows: repeat(2, 1fr);
 }

 /* Now we need the 1st child to span to 2 columns so the cards are one belo other */
.cli .grid > *:first-child {
    grid-row: 1 / span 2;
}

/* Cloud Section */
.cloud .grid {
    grid-template-columns: 4fr 3fr;
}

.lead {
    font-size: 20px;
}

/* Languages Section */
.languages .flex {
    flex-wrap: wrap;
}

.languages .card {
    margin: 18px 10px 40px;
    transition: transform 0.1s ease-in; /* Transition makes transform smooth */
    cursor: pointer;
}

.languages .logo-name {
    font-size: 20px;
    margin-bottom: 10px;
}

.languages .card:hover {
    transform: translateY(-15px); /* Move the card up by 15px if hovered */
}

/* Features Section for Features Page */
/* Image setting for Featires section */
.features-head img,
.docs-head img {
    width: 200px;
    justify-self: flex-end;
}

.features-sub-head img {
    width: 300px;
    justify-self: flex-end;
}

.features-main .card i {
    margin-right: 20px;
}

/* Span 1st card to 3 columns and 2nd card to 2 columns */
.features-main .grid {
    padding: 30px;
}
.features-main .grid > *:first-child {
    grid-column: 1 / span 3;
}

.features-main .grid > *:nth-child(2) {
    grid-column: 1 / span 2;
}

/* Documentation Page section */
.docs-main .grid {
    grid-template-columns: 1fr 2fr;
    align-items: flex-start;
}

.docs-main nav li {
    font-size: 17px;
    margin-bottom: 5px;
    padding-bottom: 5px;
    border-bottom: 1px #ccc solid;
}

.docs-main h3 {
    padding: 20px 0;
}

.docs-main a:hover {
    font-weight: bold;
}

/* Footer Section */
.footer .social a {
    margin: 0px 10px;
}



/* Add responsiveness to Page by adding media queries */
/* Following css will be applied if width of screen gows below 768px */
@media(max-width: 800px) {
    /* Convert all grids to 1 column so they all stack in row */
    .grid, 
    .cli .grid,
    .showcase .grid,
    .stats .grid,
    .cloud .grid,
    .features-main .grid,
    .docs-main .grid {
        grid-template-columns: 1fr;
        grid-template-rows: 1fr;
    }

    /* Showcase height is set to 400px, set it to auto for it to take required space */
    .showcase {
        height: auto;
    }

    /* Center aligh the showcase text */
    .showcase-text {
        text-align: center;
        margin: auto;
    }

    /* Showcase form is right aligned, center align it */
    .showcase-form {
        justify-self: center;
        margin: auto;
    }

    /* Images in Features and docs does not aligh center and text also need to be centered */
    .features-head , .features-sub-head, .docs-head {
        text-align: center;
    }
    
    .features-head img, .features-sub-head img, .docs-head img {
        justify-self: center;
    }

    /* remove spanning in features main section */
    .features-main .grid > *:first-child, .features-main .grid > *:nth-child(2) {
        grid-column: 1;
    }
}

/* If screen size goes below 500, we want navigation buttons to come down or they will overlap with header */
@media(max-width: 500px) {
    /* increase height of navbar so the links go down */
    .navbar {
        height: 110px;
    }

    /* Convert flex to column instead of row which is default */
    .navbar .flex {
        flex-direction: column;
    }

    /* Add some customization to links for mobile devices */
    .navbar ul {
        padding: 10px ;
        background-color: rgba(0, 0, 0, 0.2);
    }
}